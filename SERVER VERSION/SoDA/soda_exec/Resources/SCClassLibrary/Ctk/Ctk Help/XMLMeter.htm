<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title></title>
<meta name="Generator" content="Cocoa HTML Writer">
<meta name="CocoaVersion" content="949.33">
<style type="text/css">
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica}
p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; min-height: 14.0px}
p.p3 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #0000ff}
p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.0px Helvetica}
p.p5 {margin: 0.0px 0.0px 0.0px 57.0px; text-indent: -57.0px; font: 9.0px Monaco; min-height: 12.0px}
p.p6 {margin: 0.0px 0.0px 0.0px 57.0px; text-indent: -57.0px; font: 12.0px Helvetica}
p.p7 {margin: 0.0px 0.0px 0.0px 57.0px; text-indent: -57.0px; font: 12.0px Helvetica; min-height: 14.0px}
p.p8 {margin: 0.0px 0.0px 0.0px 85.0px; text-indent: -85.0px; font: 12.0px Helvetica}
p.p9 {margin: 0.0px 0.0px 0.0px 57.0px; text-indent: -57.0px; font: 9.0px Monaco; color: #000000}
p.p10 {margin: 0.0px 0.0px 0.0px 57.0px; text-indent: -57.0px; font: 14.0px Helvetica}
p.p11 {margin: 0.0px 0.0px 0.0px 57.0px; text-indent: -57.0px; font: 14.0px Helvetica; min-height: 17.0px}
p.p12 {margin: 0.0px 0.0px 0.0px 57.0px; text-indent: -57.0px; font: 9.0px Monaco; color: #bc1818}
p.p13 {margin: 0.0px 0.0px 0.0px 57.0px; text-indent: -57.0px; font: 9.0px Monaco}
p.p14 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; min-height: 12.0px}
p.p15 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #a91616}
p.p16 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco}
p.p17 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #bf0000}
span.s1 {font: 18.0px Helvetica}
span.s2 {color: #000000}
span.s3 {text-decoration: underline}
span.s4 {color: #0024bb}
span.s5 {color: #0000ff}
span.s6 {color: #0000bf}
span.s7 {color: #007300}
span.s8 {color: #0514c1}
span.s9 {color: #bf0000}
span.s10 {color: #606060}
span.Apple-tab-span {white-space:pre}
</style>
</head>
<body>
<p class="p1"><span class="s1"><b>XMLMeter<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></b></span><b> representation of a musical meter for MusicXML files</b></p>
<p class="p2"><br></p>
<p class="p1"><b>Inherits from: Object</b></p>
<p class="p2"><br></p>
<p class="p3"><span class="s2"><b>See also:</b> <a href="XMLScore.htm"><span class="s3">XMLScore</span></a></span><span class="s4"> </span><span class="s2">and</span><span class="s4"> <a href="XMLNote.htm"><span class="s5">XMLNote</span></a> </span><span class="s2">as well as</span><span class="s4"> <a href="MusicXMLOverview.htm"><span class="s5">MusicXMLOverview</span></a></span></p>
<p class="p2"><br></p>
<p class="p4"><b>Creation / Class Methods</b></p>
<p class="p5"><br></p>
<p class="p6"><b><span class="Apple-tab-span">	</span>*new (upper, lower, type)</b></p>
<p class="p7"><b><span class="Apple-tab-span">	</span></b></p>
<p class="p8"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><b>upper </b>- an interger or Array of integers. Arrays create a complex meter (e.g., [3, 2, 3] = 3 + 2 + 3)</p>
<p class="p8"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><b>lower </b>- the lower value for the meter. If a \simple meter, this value gets the beat. If \compound, three of this value gets the beat.</p>
<p class="p8"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><b>type </b>- \simple of \compound. Default is \simple.</p>
<p class="p7"><br></p>
<p class="p9"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g = <span class="s6">XMLMeter</span>.new(4, 4);</p>
<p class="p9"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g = <span class="s6">XMLMeter</span>.new(6, 8, <span class="s7">\compound</span>);</p>
<p class="p9"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g = <span class="s6">XMLMeter</span>.new([3, 2, 3], 8);</p>
<p class="p5"><br></p>
<p class="p10"><b>Accessing Instance and Class Variables</b></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p6"><b><span class="Apple-tab-span">	</span>type</b></p>
<p class="p7"><b><span class="Apple-tab-span">	</span></b><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>Returns the type of meter.</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p6"><b><span class="Apple-tab-span">	</span>numBeats</b></p>
<p class="p7"><b><span class="Apple-tab-span">	</span></b><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>Explanation including the type of <b>numBeats </b>and a link to its help file.</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>Default value is nil.</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p10"><b>Doing Some Task (optional)</b></p>
<p class="p11"><br></p>
<p class="p6">A short bit of prose explaining something about the task.</p>
<p class="p5"><br></p>
<p class="p5"><br></p>
<p class="p6"><b><span class="Apple-tab-span">	</span>beatDur (beat)</b></p>
<p class="p7"><b><span class="Apple-tab-span">	</span></b></p>
<p class="p6"><b><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></b>Returns the duration of a given beat in an XMLMeter.</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p12"><span class="s2"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// inline example</p>
<p class="p13"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g = <span class="s8">XMLMeter</span>(4, 4);</p>
<p class="p13"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g.beatDur(1);</p>
<p class="p5"><br></p>
<p class="p13"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g = XMLMeter([3, 2, 3, 2], 8);</p>
<p class="p13"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g.beatDur(1);</p>
<p class="p13"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g.beatDur(2);</p>
<p class="p13"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g.measureDur;</p>
<p class="p5"><br></p>
<p class="p6"><b><span class="Apple-tab-span">	</span>measureDur</b></p>
<p class="p7"><b><span class="Apple-tab-span">	</span></b></p>
<p class="p6"><b><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></b>Returns the duration of a full measure for a given XMLMeter.</p>
<p class="p7"><br></p>
<p class="p13"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g = XMLMeter([3, 2, 3, 2], 8);</p>
<p class="p13"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>g.measureDur;</p>
<p class="p5"><br></p>
<p class="p5"><br></p>
<p class="p10"><b>Examples</b></p>
<p class="p14"><br></p>
<p class="p15">// a short melodic example with changing meters, and tuplets in simple meters</p>
<p class="p16">(</p>
<p class="p16"><span class="s6">var</span> curkey, notedur, tuplet, curMeter;</p>
<p class="p17">// create an XMLScore</p>
<p class="p16">z = <span class="s6">XMLScore</span>.new;</p>
<p class="p17">// add a voice to the XMLScore</p>
<p class="p16">z.add(y = <span class="s6">XMLVoice</span>(key: <span class="s6">XMLKey</span>.major(<span class="s7">\Bf</span>)));</p>
<p class="p16">y.addMeter(1, <span class="s6">XMLMeter</span>(4, 4));</p>
<p class="p16">y.addMeter(2, <span class="s6">XMLMeter</span>(6, 8, <span class="s7">\compound</span>)); <span class="s9">// a compound meter</span></p>
<p class="p16">y.addMeter(4, <span class="s6">XMLMeter</span>(4, 4));</p>
<p class="p14"><br></p>
<p class="p16">while({</p>
<p class="p16"><span class="Apple-tab-span">	</span>curkey = [58, 60, 62, 63, 65, 67, 69, 70].choose;</p>
<p class="p16"><span class="Apple-tab-span">	</span>curMeter = y.getMeterFromBeat(y.now);</p>
<p class="p16"><span class="Apple-tab-span">	</span>tuplet = (curMeter.type == <span class="s7">\compound</span>).if({1/1}, {3/2});</p>
<p class="p16"><span class="Apple-tab-span">	</span>y.add(<span class="s6">XMLNote</span>(curkey, y.now, <span class="s7">\e</span>, tuplet));</p>
<p class="p16"><span class="Apple-tab-span">	</span>(y.now &lt; 13)</p>
<p class="p16"><span class="Apple-tab-span">	</span>});</p>
<p class="p14"><span class="Apple-tab-span">	</span></p>
<p class="p17">// output the XMLScore</p>
<p class="p16">z.output(<span class="s10">"~/Desktop/test.xml"</span>.standardizePath);</p>
<p class="p16">)</p>
</body>
</html>
