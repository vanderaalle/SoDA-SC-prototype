
// to install:
// !!! REMEMBER TO CHANGE THE WAY FILEPATHS ARE SET BEFORE DEPLOYMENT TO THE SERVER
// make a nice script

// full Example
~ssc = SoundScapeComposer.new("cars birds Berlin", 240, \stereo, 3, 100)

~ssc.bounce()

a = ~ssc.sonicSpace

a[0].soundSources.do{arg i, j; 
	j.postln; 
	i.exportScore;
}


// == test new API ===

~path = (Document.current.dir ++  "/data.json");
("curl \"https://dev.celi.it/soda/api/soda/extended/dedupDocuments.json?type=search&start=0&end=50&classPath=&sortDir=-1&searchText=cars%20birds%20Berlin\" > " ++ ~path.asUnixPath).unixCmd({
	"ok".postln;
	~data = JSONFileReader.read(~path)["result"];
});

~path = (Document.current.dir ++  "/data.json");
("curl \"https://dev.celi.it/soda/api/soda/extended/dedupDocuments.json?type=search&start=0&end=50&defaultOperator=OR&sortDir=-1&searchText=cars%20London%20people\" > " ++ ~path.asUnixPath).unixCmd({
	"ok".postln;
	~data = JSONFileReader.read(~path)["result"];
});


~data.keysValuesDo{arg k,v;
	[k,v].postln;
}

~data["documents"].size

~data["documents"].do{
	arg i;
	[i["title"], i["typeOfSoundObject"][0]].postln;
}


~data["documents"][3].keysValuesDo{arg k,v;
		[k,v].postln;
	}

~data.keysValuesDo{arg k,v; 
	[k,v].postln;
}

~data["result"].keysValuesDo{arg k,v; 
	[k,v].postln;
}

~data["documents"].do{
	arg i;
	[i["title"], i["url"]].postln;
}


